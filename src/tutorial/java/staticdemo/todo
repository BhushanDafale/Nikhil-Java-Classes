
Java Class Loading

1. class load
2. static block/variable/method
3. constructor - on every call instance block will call
4. instance variable


static keyword:
---------------
1. mainly used for memory management
2. common to all references (same for every object/instance of class)
3. static members (block, variable, methods, inner classes) can be access before object creation/without object reference.
3. Can be use with
	-> Block
	    - execute exactly once when the class first loaded
	    - can be use to initialize static variable
	    
	-> Variable
	    - can be create at class level only, essentially a global variable
	    - single copy will create and divided among all object at the class level
	    
	-> Method
	    - common example is main(String[]) method
	    - they can call other static method only
	    - can access static variable directly (without any object)
	    
	-> Inner classes
		    inner class -
			**example:	
				// outer class    
				class A {
					// inner class
					static class B {
					}
				}
	    - only nested/inner class can be static
	    - Doesn't need outer class object/reference 
	    - cannot access non-static members of outer class
	 	   
	 	   
	 	   
Polymorphisum 
 - overloading - compile time/static poly
 - overriding - runtime time/dynamic poly	 	   
